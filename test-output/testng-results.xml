<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="11" passed="10" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-02-05T20:50:37 ICT" name="Loan Department" finished-at="2025-02-05T20:50:37 ICT" duration-ms="105">
    <groups>
      <group name="Smoke">
        <method signature="day2.ploan()[pri:0, instance:test.day2@13c9d689]" name="ploan" class="test.day2"/>
        <method signature="day4.MobileloginHomeLoan()[pri:0, instance:test.day4@3754a4bf]" name="MobileloginHomeLoan" class="test.day4"/>
        <method signature="day3.MobileloginCarLoan()[pri:0, instance:test.day3@7bedc48a]" name="MobileloginCarLoan" class="test.day3"/>
      </group> <!-- Smoke -->
    </groups>
    <test started-at="2025-02-05T20:50:37 ICT" name="Personal Loan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="105">
      <class name="test.day4">
        <test-method signature="MobileloginHomeLoan()[pri:0, instance:test.day4@3754a4bf]" started-at="2025-02-05T20:50:37 ICT" name="MobileloginHomeLoan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginHomeLoan -->
        <test-method signature="loginAPIHomeLoan()[pri:0, instance:test.day4@3754a4bf]" started-at="2025-02-05T20:50:37 ICT" name="loginAPIHomeLoan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- loginAPIHomeLoan -->
        <test-method signature="webloginHomeLoan(java.lang.String)[pri:0, instance:test.day4@3754a4bf]" started-at="2025-02-05T20:50:37 ICT" name="webloginHomeLoan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[personalloan.com]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webloginHomeLoan -->
      </class> <!-- test.day4 -->
      <class name="test.day2">
        <test-method is-config="true" signature="prerequiste()[pri:0, instance:test.day2@13c9d689]" started-at="2025-02-05T20:50:37 ICT" name="prerequiste" finished-at="2025-02-05T20:50:37 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- prerequiste -->
        <test-method signature="ploan()[pri:0, instance:test.day2@13c9d689]" started-at="2025-02-05T20:50:37 ICT" name="ploan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- ploan -->
      </class> <!-- test.day2 -->
      <class name="test.day1">
        <test-method signature="Demo()[pri:0, instance:test.day1@51399530]" started-at="2025-02-05T20:50:37 ICT" name="Demo" finished-at="2025-02-05T20:50:37 ICT" duration-ms="26" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [true] but found [false]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [true] but found [false]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertTrue(Assert.java:57)
at org.testng.Assert.assertTrue(Assert.java:67)
at test.day1.Demo(day1.java:23)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner$SuiteWorker.run(SuiteRunner.java:463)
at org.testng.internal.thread.ThreadUtil.lambda$execute$0(ThreadUtil.java:64)
at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:317)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1583)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Demo -->
        <test-method is-config="true" signature="lastexecution()[pri:0, instance:test.day1@51399530]" started-at="2025-02-05T20:50:37 ICT" name="lastexecution" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- lastexecution -->
      </class> <!-- test.day1 -->
    </test> <!-- Personal Loan -->
    <test started-at="2025-02-05T20:50:37 ICT" name="Car Loan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="105">
      <class name="test.day3">
        <test-method is-config="true" signature="BFsuite()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="BFsuite" finished-at="2025-02-05T20:50:37 ICT" duration-ms="10" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- BFsuite -->
        <test-method is-config="true" signature="beforeclass()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="beforeclass" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method is-config="true" signature="beforeeverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="beforeeverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverytest -->
        <test-method signature="MobileDataTest(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="MobileDataTest" data-provider="getData" finished-at="2025-02-05T20:50:37 ICT" duration-ms="11" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username1]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password1]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileDataTest -->
        <test-method is-config="true" signature="beforeeverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="beforeeverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverytest -->
        <test-method is-config="true" signature="aftereverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="aftereverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="0" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereverytest -->
        <test-method signature="MobileDataTest(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="MobileDataTest" data-provider="getData" finished-at="2025-02-05T20:50:37 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username2]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password2]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileDataTest -->
        <test-method is-config="true" signature="aftereverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="aftereverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereverytest -->
        <test-method is-config="true" signature="beforeeverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="beforeeverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverytest -->
        <test-method signature="MobileDataTest(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="MobileDataTest" data-provider="getData" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[username3]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[password3]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileDataTest -->
        <test-method is-config="true" signature="aftereverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="aftereverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereverytest -->
        <test-method is-config="true" signature="beforeeverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="beforeeverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverytest -->
        <test-method signature="MobileloginCarLoan()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="MobileloginCarLoan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobileloginCarLoan -->
        <test-method is-config="true" signature="aftereverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="aftereverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereverytest -->
        <test-method is-config="true" signature="beforeeverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="beforeeverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverytest -->
        <test-method signature="MobilesignoutCarLoan()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="MobilesignoutCarLoan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="5" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- MobilesignoutCarLoan -->
        <test-method is-config="true" signature="aftereverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="aftereverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereverytest -->
        <test-method is-config="true" signature="beforeeverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="beforeeverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeeverytest -->
        <test-method signature="webloginCarLoan(java.lang.String,java.lang.String)[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="webloginCarLoan" finished-at="2025-02-05T20:50:37 ICT" duration-ms="2" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[carloan.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[123456]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- webloginCarLoan -->
        <test-method is-config="true" signature="aftereverytest()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="aftereverytest" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- aftereverytest -->
        <test-method is-config="true" signature="afterclass()[pri:0, instance:test.day3@7bedc48a]" started-at="2025-02-05T20:50:37 ICT" name="afterclass" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- test.day3 -->
      <class name="test.day1">
        <test-method is-config="true" signature="afSuite()[pri:0, instance:test.day1@51399530]" started-at="2025-02-05T20:50:37 ICT" name="afSuite" finished-at="2025-02-05T20:50:37 ICT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afSuite -->
      </class> <!-- test.day1 -->
    </test> <!-- Car Loan -->
  </suite> <!-- Loan Department -->
</testng-results>
